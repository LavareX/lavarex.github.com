<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lavare</title>
  <subtitle>Review myself</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yangcaimu.github.io/"/>
  <updated>2017-10-31T02:49:39.000Z</updated>
  <id>http://yangcaimu.github.io/</id>
  
  <author>
    <name>Lavare</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>读 SDWebImage 源码小记</title>
    <link href="http://yangcaimu.github.io/2017/10/22/%E8%AF%BB-SDWebImage-%E6%BA%90%E7%A0%81%E5%B0%8F%E8%AE%B0/"/>
    <id>http://yangcaimu.github.io/2017/10/22/读-SDWebImage-源码小记/</id>
    <published>2017-10-22T09:42:52.000Z</published>
    <updated>2017-10-31T02:49:39.000Z</updated>
    
    <content type="html">&lt;p&gt;Version: 4.2.0&lt;/p&gt;
&lt;h2 id=&quot;流程&quot;&gt;&lt;a href=&quot;#流程&quot; class=&quot;headerlink&quot; title=&quot;流程&quot;&gt;&lt;/a&gt;流程&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/2017-10-22-读-SDWebImage-源码小记-SDWebImageSequenceDiagram.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;基本流程&quot;&gt;&lt;a href=&quot;#基本流程&quot; class=&quot;headerlink&quot; title=&quot;基本流程&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/rs/SDWebImage/blob/master/Docs/SDWebImageSequenceDiagram.png&quot;&gt;基本流程&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;通过对象 (eg: &lt;code&gt;UIImageView&lt;/code&gt;) 的 &lt;code&gt;Category&lt;/code&gt; (&lt;code&gt;sd_setImageWithURL()&lt;/code&gt;) 作为入口&lt;/li&gt;
&lt;li&gt;调用基类 &lt;code&gt;UIView&lt;/code&gt; 的 &lt;code&gt;Category&lt;/code&gt; (&lt;code&gt;sd_internalSetImageWithURL()&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;调用管理类 &lt;code&gt;SDWebImageManger&lt;/code&gt; 的 &lt;code&gt;loadImageWithURL:()&lt;/code&gt; 方法，由 &lt;code&gt;SDWebImageManger&lt;/code&gt; 协调 &lt;code&gt;SDImageCache&lt;/code&gt;、&lt;code&gt;SDWebImageDownloader&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;调用缓存类 &lt;code&gt;SDImageCache&lt;/code&gt; 的 &lt;code&gt;queryDiskCacheForKey()&lt;/code&gt; 先去检查有没缓存（内存+磁盘）&lt;/li&gt;
&lt;li&gt;有缓存，返回缓存图片&lt;/li&gt;
&lt;li&gt;若没有，由 &lt;code&gt;SDWebImageDownloader&lt;/code&gt; 发起请求下载图片 &lt;code&gt;downloadImage(url, options, progress, completed)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;返回下载结果回调给 &lt;code&gt;SDWebImageManger&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;下载图片成功并用 &lt;code&gt;SDImageCache&lt;/code&gt; 的 &lt;code&gt;storeImage()&lt;/code&gt; 缓存图片&lt;/li&gt;
&lt;li&gt;返回图片给基类 &lt;code&gt;UIView&lt;/code&gt;，缓存或者下载的&lt;/li&gt;
&lt;li&gt;图片设置到对象上 (eg: &lt;code&gt;UIImageView&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;主要文件&quot;&gt;&lt;a href=&quot;#主要文件&quot; class=&quot;headerlink&quot; title=&quot;主要文件&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/rs/SDWebImage/blob/master/Docs/SDWebImageClassDiagram.png&quot;&gt;主要文件&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;入口：&lt;code&gt;Category&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;UIImageView+WebCache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UIButton+WebCache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UIView+WebCache&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缓存&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SDImageCacheConfig&lt;/code&gt;：缓存配置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SDImageCache&lt;/code&gt;：缓存管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;下载&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SDWebImageDownloaderOperation&lt;/code&gt;：实际下载操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SDWebImageDownloader&lt;/code&gt;：下载管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;编码／解码&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SDWebImageCodersManager&lt;/code&gt;: 编解码管理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SDWebImageCoder&lt;/code&gt;：编解码协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SDWebImageImageIOCoder&lt;/code&gt;：PNG／JPEG／TIFF 编解码，解压缩，显示大图&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SDWebImageGIFCoder&lt;/code&gt;：GIF 编解码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SDWebImageWebPCoder&lt;/code&gt;：WebP 编解码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;工具&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SDWebImageManager&lt;/code&gt;：协调 &lt;code&gt;SDImageCache&lt;/code&gt;、&lt;code&gt;SDWebImageDownloader&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SDWebImagePrefetcher&lt;/code&gt;：预下载图片&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;解压缩（Decompress）&quot;&gt;&lt;a href=&quot;#解压缩（Decompress）&quot; class=&quot;headerlink&quot; title=&quot;解压缩（Decompress）&quot;&gt;&lt;/a&gt;解压缩（Decompress）&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;解压缩&lt;/strong&gt;指的是，将压缩过的图片（&lt;a href=&quot;http://www.wikiwand.com/zh-hans/JPEG&quot;&gt;JPEG&lt;/a&gt;、&lt;a href=&quot;http://www.wikiwand.com/zh-hans/PNG&quot;&gt;PNG&lt;/a&gt;、&lt;a href=&quot;http://www.wikiwand.com/zh-hans/WebP&quot;&gt;WebP&lt;/a&gt;、&lt;a href=&quot;http://www.wikiwand.com/zh-hans/APNG&quot;&gt;APNG&lt;/a&gt;）解压成未压缩的&lt;a href=&quot;http://www.wikiwand.com/zh-hans/%E4%BD%8D%E5%9B%BE&quot;&gt;位图&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;加载图片流程&quot;&gt;&lt;a href=&quot;#加载图片流程&quot; class=&quot;headerlink&quot; title=&quot;加载图片流程&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/path/FastImageCache#the-problem&quot;&gt;加载图片流程&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;假设用 &lt;code&gt;+[UIImage imageWithContentsOfFile:]&lt;/code&gt; 加载图片，它会创建 &lt;code&gt;UIImage&lt;/code&gt; 的一个引用，此时并不会发生解码&lt;/li&gt;
&lt;li&gt;返回的 &lt;code&gt;UIImage&lt;/code&gt; 赋值给 &lt;code&gt;UIImageView&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;隐式 &lt;code&gt;CATransaction&lt;/code&gt; 捕获到图层树（&lt;code&gt;layer tree&lt;/code&gt;）的修改&lt;/li&gt;
&lt;li&gt;在主线程 &lt;code&gt;run loop&lt;/code&gt; 的下一个循环时，&lt;code&gt;Core Animation&lt;/code&gt; 会提交这些隐式 &lt;code&gt;CATransaction&lt;/code&gt;，图片可能会创建一个 &lt;code&gt;copy&lt;/code&gt;。在 &lt;code&gt;copy&lt;/code&gt; 过程中，可能会发生如下一些或者全部步骤：&lt;ol&gt;
&lt;li&gt;分配管理文件 IO、解压缩操作的内存缓冲区&lt;/li&gt;
&lt;li&gt;文件数据从磁盘读取到内存中&lt;/li&gt;
&lt;li&gt;压缩的图片数据解码成未压缩的位图格式，这通常是非常耗时的 CPU 操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Core Animation&lt;/code&gt; 将解压缩后的位图数据渲染到图层（&lt;code&gt;layer&lt;/code&gt;）上&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中「流程4步骤3」中图片的解压缩是一个非常耗时的操作，而且默认发生在主线程中。当显示的图片过多时，容易导致性能问题。特别是滚动时，尤为突出。&lt;/p&gt;
&lt;p&gt;因此我们可以将图片的解压缩放在后台线程，不堵塞主线程。这就需要提前在后台线程解压缩，之后将解压缩后的图片在主线程赋值给 &lt;code&gt;UIImageView&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;主要实现&quot;&gt;&lt;a href=&quot;#主要实现&quot; class=&quot;headerlink&quot; title=&quot;主要实现&quot;&gt;&lt;/a&gt;主要实现&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/rs/SDWebImage/blob/master/SDWebImage/SDWebImageImageIOCoder.m&quot;&gt;SDWebImageImageIOCoder.m&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (nullable &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)sd_decompressedImageWithImage:(nullable &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)image &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// autorelease the bitmap context and all vars to help system to free memory when there are memory warning.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// on iOS7, do not forget to call [[SDImageCache sharedImageCache] clearMemory];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;@autoreleasepool&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGImageRef&lt;/span&gt; imageRef = image.CGImage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGColorSpaceRef&lt;/span&gt; colorspaceRef = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; class] colorSpaceForImageRef:imageRef];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t width = &lt;span class=&quot;built_in&quot;&gt;CGImageGetWidth&lt;/span&gt;(imageRef);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t height = &lt;span class=&quot;built_in&quot;&gt;CGImageGetHeight&lt;/span&gt;(imageRef);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t bytesPerRow = kBytesPerPixel * width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// kCGImageAlphaNone is not supported in CGBitmapContextCreate.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Since the original image here has no alpha info, use kCGImageAlphaNoneSkipLast&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// to create bitmap graphics contexts without alpha info.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt; context = &lt;span class=&quot;built_in&quot;&gt;CGBitmapContextCreate&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     width,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     height,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     kBitsPerComponent,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     bytesPerRow,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     colorspaceRef,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     k&lt;span class=&quot;built_in&quot;&gt;CGBitmapByteOrderDefault&lt;/span&gt;|k&lt;span class=&quot;built_in&quot;&gt;CGImageAlphaNoneSkipLast&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (context == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; image;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Draw the image into the context and retrieve the new bitmap image without alpha&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextDrawImage&lt;/span&gt;(context, &lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, width, height), imageRef); &lt;span class=&quot;comment&quot;&gt;// Decompress&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGImageRef&lt;/span&gt; imageRefWithoutAlpha = &lt;span class=&quot;built_in&quot;&gt;CGBitmapContextCreateImage&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *imageWithoutAlpha = [&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageWith&lt;span class=&quot;built_in&quot;&gt;CGImage&lt;/span&gt;:imageRefWithoutAlpha&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                         scale:image.scale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                   orientation:image.imageOrientation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextRelease&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGImageRelease&lt;/span&gt;(imageRefWithoutAlpha);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; imageWithoutAlpha;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对比了 &lt;a href=&quot;https://github.com/ibireme/YYWebImage/blob/093193c67bfa2409af93e618a48e3208d63106a5/YYWebImage/Image/YYImageCoder.m#L875-L892&quot;&gt;YYWebImage&lt;/a&gt;、&lt;a href=&quot;https://github.com/Flipboard/FLAnimatedImage/blob/master/FLAnimatedImage/FLAnimatedImage.m#L651-L719&quot;&gt;FLAnimatedImage&lt;/a&gt; 的解压缩代码，&lt;a href=&quot;https://developer.apple.com/library/content/documentation/GraphicsImaging/Conceptual/drawingwithquartz2d/dq_context/dq_context.html#//apple_ref/doc/uid/TP30001066-CH203-BCIBHHBB&quot;&gt;iOS 位图上下文支持的像素格式&lt;/a&gt;，以及  &lt;a href=&quot;https://developer.apple.com/documentation/uikit/1623912-uigraphicsbeginimagecontextwitho?language=objc#&quot;&gt;UIGraphicsBeginImageContextWithOptions&lt;/a&gt; 的讨论说明，最终的 &lt;code&gt;CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)&lt;/code&gt; 的传入参数应该如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;CGBitmapContextCreate&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;built_in&quot;&gt;CGImageGetWidth&lt;/span&gt;(imageRef),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;built_in&quot;&gt;CGImageGetHeight&lt;/span&gt;(imageRef),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// bitsPerComponent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// bytesPerRow&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;built_in&quot;&gt;CGColorSpaceCreateDeviceRGB&lt;/span&gt;(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      k&lt;span class=&quot;built_in&quot;&gt;CGBitmapByteOrderDefault&lt;/span&gt;| hasAlpha ? k&lt;span class=&quot;built_in&quot;&gt;CGImageAlphaPremultipliedFirst&lt;/span&gt; : k&lt;span class=&quot;built_in&quot;&gt;CGImageAlphaNoneSkipFirst&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;加载大图&quot;&gt;&lt;a href=&quot;#加载大图&quot; class=&quot;headerlink&quot; title=&quot;加载大图&quot;&gt;&lt;/a&gt;加载大图&lt;/h2&gt;&lt;p&gt;当加载一张很大的图片时，如果直接加载到内存中，很容易超出 App 的最大内存预算，轻则 App 被系统 Kill，重则整个系统重启。详细参数见：&lt;a href=&quot;https://stackoverflow.com/a/15200855/3097963&quot;&gt;iOS App 的最大内存预算&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;因此我们可以采用 &lt;a href=&quot;http://www.wikiwand.com/zh-hans/%E5%9F%BA%E4%BA%8E%E5%9B%BE%E5%9D%97%E6%B8%B2%E6%9F%93&quot;&gt;Tiled rendering&lt;/a&gt; 的方式渲染图片，每次只加载图片的一小部分，最后再拼成一张图。详细可以看看 &lt;a href=&quot;https://github.com/rs/SDWebImage/blob/master/SDWebImage/SDWebImageImageIOCoder.m#L266-L382&quot;&gt;SDWebImageImageIOCoder.m&lt;/a&gt; 的实现或者&lt;a href=&quot;https://developer.apple.com/library/content/samplecode/LargeImageDownsizing/Introduction/Intro.html#//apple_ref/doc/uid/DTS40011173-Intro-DontLinkElementID_2&quot;&gt;苹果示例代码&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;h3 id=&quot;主队列-vs-主线程（Main-Queue-vs-Main-Thread）&quot;&gt;&lt;a href=&quot;#主队列-vs-主线程（Main-Queue-vs-Main-Thread）&quot; class=&quot;headerlink&quot; title=&quot;主队列 vs 主线程（Main Queue vs. Main Thread）&quot;&gt;&lt;/a&gt;主队列 vs 主线程（Main Queue vs. Main Thread）&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#ifndef dispatch_main_async_safe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#define dispatch_main_async_safe(block)\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (strcmp(dispatch_queue_get_label(DISPATCH_CURRENT_QUEUE_LABEL), dispatch_queue_get_label(dispatch_get_main_queue())) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        block();\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_main_queue(), block);\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是 SDWebImage 的主线程判断代码，使代码一直在主线程上运行。&lt;/p&gt;
&lt;p&gt;这里的主线程判断是用&lt;strong&gt;主队列&lt;/strong&gt;进行判断，而不是&lt;strong&gt;主线程&lt;/strong&gt;判断。为什么呢？&lt;/p&gt;
&lt;p&gt;首先在 &lt;code&gt;dispatch_sync&lt;/code&gt; 的&lt;a href=&quot;https://developer.apple.com/documentation/dispatch/1452870-dispatch_sync?language=objc#&quot;&gt;文档讨论中&lt;/a&gt;有说到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;… As an optimization, this function invokes the block on the current thread when possible.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为优化，&lt;code&gt;dispatch_sync&lt;/code&gt; 有可能会在当前线程中调用 &lt;code&gt;block&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;假设你调用了如下代码，当然了，尽量不要在主线程调用任意同步操作（容易死锁😔）。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main queue environment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; nonMainQueue = &lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;com.lavare.nonMainQueue&quot;&lt;/span&gt;, DISPATCH_QUEUE_CONCURRENT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_sync&lt;/span&gt;(nonMainQueue) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Other tasks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;dispatch_sync&lt;/code&gt; 分配的任务在 &lt;code&gt;nonMainQueue&lt;/code&gt; 队列中调用，因为优化问题，&lt;code&gt;nonMainQueue&lt;/code&gt; 队列有可能会在当前线程中调用，即主线程。&lt;/p&gt;
&lt;p&gt;那主线程中会有 2 种情况，有可能是主队列，有可能是非主队列。&lt;/p&gt;
&lt;p&gt;所以对于 &lt;code&gt;UIKit&lt;/code&gt; 、需要主线程或者主队列的代码，用主队列判断会更安全。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rs/SDWebImage&quot;&gt;SDWebImage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wikiwand.com/zh/%E6%A0%85%E6%A0%BC%E5%8C%96&quot;&gt;栅格化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wikiwand.com/zh-hans/%E8%89%B2%E5%BD%A9%E6%B7%B1%E5%BA%A6&quot;&gt;色彩深度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wikiwand.com/zh-hans/%E4%BD%8D%E5%9B%BE&quot;&gt;位图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wikiwand.com/zh-hans/%E5%83%8F%E7%B4%A0&quot;&gt;像素&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wikiwand.com/zh-hans/%E5%9F%BA%E4%BA%8E%E5%9B%BE%E5%9D%97%E6%B8%B2%E6%9F%93&quot;&gt;基于图块渲染&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.imerc.xyz/2017/07/09/ios-image-decode/&quot;&gt;iOS中的图片解码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.leichunfeng.com/blog/2017/02/20/talking-about-the-decompression-of-the-image-in-ios/&quot;&gt;谈谈 iOS 中图片的解压缩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000002776279#articleHeader8&quot;&gt;iOS 异步图片加载优化与常用开源库分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/content/samplecode/LargeImageDownsizing/Introduction/Intro.html#//apple_ref/doc/uid/DTS40011173-Intro-DontLinkElementID_2&quot;&gt;Large Image Downsizing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.benjamin-encz.de/post/main-queue-vs-main-thread&quot;&gt;GCD’s Main Queue vs. Main Thread&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Version: 4.2.0&lt;/p&gt;
&lt;h2 id=&quot;流程&quot;&gt;&lt;a href=&quot;#流程&quot; class=&quot;headerlink&quot; title=&quot;流程&quot;&gt;&lt;/a&gt;流程&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/2017-10-22-读-SDWebImage-源码小记-S
    
    </summary>
    
    
      <category term="iOS" scheme="http://yangcaimu.github.io/tags/iOS/"/>
    
      <category term="SDWebImage" scheme="http://yangcaimu.github.io/tags/SDWebImage/"/>
    
      <category term="源码解析" scheme="http://yangcaimu.github.io/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>添加约束的恰当时机</title>
    <link href="http://yangcaimu.github.io/2016/12/05/%E6%B7%BB%E5%8A%A0%E7%BA%A6%E6%9D%9F%E7%9A%84%E6%81%B0%E5%BD%93%E6%97%B6%E6%9C%BA/"/>
    <id>http://yangcaimu.github.io/2016/12/05/添加约束的恰当时机/</id>
    <published>2016-12-04T16:07:30.000Z</published>
    <updated>2016-12-04T16:16:29.000Z</updated>
    
    <content type="html">&lt;p&gt;总的来说，在 iOS 开发中添加约束有 2 种方式，通过 Interface Builder 的界面拖拽添加，或者手写代码添加。&lt;/p&gt;
&lt;h3 id=&quot;Interface-Builder-实现&quot;&gt;&lt;a href=&quot;#Interface-Builder-实现&quot; class=&quot;headerlink&quot; title=&quot;Interface Builder 实现&quot;&gt;&lt;/a&gt;Interface Builder 实现&lt;/h3&gt;&lt;p&gt;在 Interface Builder 下只能通过界面添加，所以无需考虑添加的时机。&lt;/p&gt;
&lt;h3 id=&quot;代码实现&quot;&gt;&lt;a href=&quot;#代码实现&quot; class=&quot;headerlink&quot; title=&quot;代码实现&quot;&gt;&lt;/a&gt;代码实现&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;初始化的约束设置在 &lt;code&gt;- (void)viewDidLoad&lt;/code&gt; 方法中添加&lt;/li&gt;
&lt;li&gt;后期需要修改更新的约束设置则在 &lt;code&gt;- (void)updateConstraints&lt;/code&gt; 方法中添加&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;关于第一点的说法在 &lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2015/219/?time=269&quot;&gt;WWDC 2015 的 Session 219 - Mysteries of Auto Layout, Part 2&lt;/a&gt; 中有提到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All of your initial constraint setup should ideally happen inside Interface Builder.&lt;br&gt;Or if you really find that you need to allocate your constraints programmatically, some place like viewDidLoad is much better.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第二点的说法则在 &lt;code&gt;- (void)updateConstraints&lt;/code&gt; 的&lt;a href=&quot;https://developer.apple.com/reference/uikit/uiview/1622512-updateconstraints&quot;&gt;文档&lt;/a&gt;中有提到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Override this method to optimize changes to your constraints.&lt;br&gt;……&lt;br&gt;Your implementation must be as efficient as possible. Do not deactivate all your constraints, then reactivate the ones you need. Instead, your app must have some way of tracking your constraints, and validating them during each update pass. Only change items that need to be changed. During each update pass, you must ensure that you have the appropriate constraints for the app’s current state.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大概的意思就是当需要修改约束时，保留待修改的约束的引用，在该方法中的合适时机进行修改。&lt;/p&gt;
&lt;h4 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h4&gt;&lt;p&gt;若全部的约束都是写在 &lt;code&gt;- (void)updateConstraints&lt;/code&gt; 方法中的话，需要额外设置 &lt;code&gt;UIView&lt;/code&gt; 的 &lt;code&gt;requiresConstraintBasedLayout&lt;/code&gt; 属性为 &lt;code&gt;YES&lt;/code&gt;。&lt;br&gt;因为当代码全部写在 &lt;code&gt;- (void)updateConstraints&lt;/code&gt; 方法中时，系统是不知道当前 &lt;code&gt;View&lt;/code&gt; 是否采用约束的方式来布局，所以就不会调用 &lt;code&gt;- (void)updateConstraints&lt;/code&gt; 方法，所以为了解决「先有鸡还是先有蛋」的问题，把 &lt;code&gt;requiresConstraintBasedLayout&lt;/code&gt; 属性设置为 &lt;code&gt;YES&lt;/code&gt;，以告诉系统该 &lt;code&gt;View&lt;/code&gt; 采用约束的方式来布局。&lt;br&gt;这个比较坑，在文档中并没有提及到，但是在 &lt;code&gt;UIView&lt;/code&gt; 的头文件（打开 Xcode，按下快捷键「⇧⌘O」后，输入 &lt;code&gt;requiresConstraintBasedLayout&lt;/code&gt;）中可以找到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;constraint-based layout engages lazily when someone tries to use it (e.g., adds a constraint to a view).  If you do all of your constraint set up in -updateConstraints, you might never even receive updateConstraints if no one makes a constraint.  To fix this chicken and egg problem, override this method to return YES if your view needs the window to use constraint-based layout.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.edwardhuynh.com/blog/2013/11/24/the-mystery-of-the-requiresconstraintbasedlayout/&quot;&gt;The Mystery of the +requiresConstraintBasedLayout - TIL by Ed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2015/219/?time=269&quot;&gt;Mysteries of Auto Layout, Part 2 - WWDC 2015 - Videos - Apple Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;总的来说，在 iOS 开发中添加约束有 2 种方式，通过 Interface Builder 的界面拖拽添加，或者手写代码添加。&lt;/p&gt;
&lt;h3 id=&quot;Interface-Builder-实现&quot;&gt;&lt;a href=&quot;#Interface-Builder-实现&quot; class=
    
    </summary>
    
    
      <category term="iOS" scheme="http://yangcaimu.github.io/tags/iOS/"/>
    
      <category term="Constraint" scheme="http://yangcaimu.github.io/tags/Constraint/"/>
    
  </entry>
  
  <entry>
    <title>写作本身的一些参考资料</title>
    <link href="http://yangcaimu.github.io/2016/07/12/%E5%86%99%E4%BD%9C%E6%9C%AC%E8%BA%AB%E7%9A%84%E4%B8%80%E4%BA%9B%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    <id>http://yangcaimu.github.io/2016/07/12/写作本身的一些参考资料/</id>
    <published>2016-07-12T10:11:22.000Z</published>
    <updated>2016-07-12T10:16:53.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;好的排版能让人眼前一亮，赏心悦目。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Markdown&quot;&gt;&lt;a href=&quot;#Markdown&quot; class=&quot;headerlink&quot; title=&quot;Markdown&quot;&gt;&lt;/a&gt;Markdown&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/#philosophy&quot;&gt;Markdown 语法说明(简体中文版)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://guides.github.com/features/mastering-markdown/#&quot;&gt;Mastering Markdown · GitHub Guides&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;排版&quot;&gt;&lt;a href=&quot;#排版&quot; class=&quot;headerlink&quot; title=&quot;排版&quot;&gt;&lt;/a&gt;排版&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sparanoid/chinese-copywriting-guidelines&quot;&gt;GitHub - sparanoid/chinese-copywriting-guidelines: Chinese Copywriting Guidelines / 中文文案排版指北&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vinta/pangu.js&quot;&gt;GitHub - vinta/pangu.js: 為什麼你們就是不能加個空格呢？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/19593470&quot;&gt;中文省略号应该垂直居中还是沉底？ - 排版 - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/20506092?refer=uicircle&quot;&gt;写给大家看的中文排版指南 - UIcircle - 知乎专栏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@scomper/%E9%82%A3%E4%BA%9B%E6%BC%82%E4%BA%AE%E7%9A%84%E5%9B%BE%E7%A4%BA%E6%A0%87%E6%B3%A8-9bafbf34bc70#.kbb3ygfd4&quot;&gt;那些漂亮的图示标注 — Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      好的排版能让人眼前一亮，赏心悦目。
    
    </summary>
    
    
      <category term="写作" scheme="http://yangcaimu.github.io/tags/%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Alfred workflow: 快速打开 Xcode 工程</title>
    <link href="http://yangcaimu.github.io/2016/06/09/Alfred-workflow-%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80-Xcode-%E5%B7%A5%E7%A8%8B/"/>
    <id>http://yangcaimu.github.io/2016/06/09/Alfred-workflow-快速打开-Xcode-工程/</id>
    <published>2016-06-09T15:09:02.000Z</published>
    <updated>2016-07-12T10:37:08.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;作为一个 iOS 开发者，常常需要打开 Xcode 工程项目，一般情况下都是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;打开 Finder –&amp;gt; 找到指定目录（多级目录） –&amp;gt; 打开&lt;code&gt;.xcodeproj&lt;/code&gt;或者&lt;code&gt;.xcworkspace&lt;/code&gt;文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如此重复繁琐的事件想必是有优化的空间的，这时 Alfred 的 workflow 就派上用场了。&lt;/p&gt;
&lt;h3 id=&quot;定制-Workflow&quot;&gt;&lt;a href=&quot;#定制-Workflow&quot; class=&quot;headerlink&quot; title=&quot;定制 Workflow&quot;&gt;&lt;/a&gt;定制 Workflow&lt;/h3&gt;&lt;h4 id=&quot;新建空白的-Workflow&quot;&gt;&lt;a href=&quot;#新建空白的-Workflow&quot; class=&quot;headerlink&quot; title=&quot;新建空白的 Workflow&quot;&gt;&lt;/a&gt;新建空白的 Workflow&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/2016-06-09-Alfred-workflow-快速打开-Xcode-工程+01-new-blank-workflow.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;Input-File-Filter&quot;&gt;&lt;a href=&quot;#Input-File-Filter&quot; class=&quot;headerlink&quot; title=&quot;Input - File Filter&quot;&gt;&lt;/a&gt;Input - File Filter&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/2016-06-09-Alfred-workflow-快速打开-Xcode-工程+02-input-file-filter.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;步骤 1 是在新建的空白 Workflow 上右击显示的&lt;/li&gt;
&lt;li&gt;步骤 2 中的 File Types 额外添加了&lt;code&gt;.playground&lt;/code&gt;文件&lt;/li&gt;
&lt;li&gt;若需要指定范围搜索的，可以在步骤 2 中的 Search Scope 设置&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Action-Open-File&quot;&gt;&lt;a href=&quot;#Action-Open-File&quot; class=&quot;headerlink&quot; title=&quot;Action - Open File&quot;&gt;&lt;/a&gt;Action - Open File&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/2016-06-09-Alfred-workflow-快速打开-Xcode-工程+03-action-open-file.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指定用 Xcode 打开文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;连接&quot;&gt;&lt;a href=&quot;#连接&quot; class=&quot;headerlink&quot; title=&quot;连接&quot;&gt;&lt;/a&gt;连接&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/2016-06-09-Alfred-workflow-快速打开-Xcode-工程+04-connect.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作用是当按下回车&lt;code&gt;↩︎&lt;/code&gt;时,使用 Xcode 打开&lt;/li&gt;
&lt;li&gt;默认情况下在 Alfred 的搜索结果中按下&lt;code&gt;⌘&lt;/code&gt;+&lt;code&gt;↩︎&lt;/code&gt;通过 Finder 打开当前文件的目录，可在 Alfred Preferences –&amp;gt; Advanced –&amp;gt; &lt;code&gt;cmd + ↩︎&lt;/code&gt; 中设置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用效果&quot;&gt;&lt;a href=&quot;#使用效果&quot; class=&quot;headerlink&quot; title=&quot;使用效果&quot;&gt;&lt;/a&gt;使用效果&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/2016-06-09-Alfred-workflow-快速打开-Xcode-工程+05-renderings.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h3&gt;&lt;p&gt;目前 Alfred Workflow 的 File Filter 下的 Search Scope（搜索范围）只支持 “include（包括）” 的区域，不支持 “exclude（排除）” 的区域。File Types 也是一样。因为 Alfred 的文件搜索是通过 OS X 的 Metadata API 实现的，而 Metadata API 只支持 “include（包括）” 功能，不支持 “exclude（排除）” 功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Alfred uses the OS X metadata api for file search and this only allows inclusions, not exclusions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Andrew&lt;/strong&gt; - Alfred’s Dad&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.alfredforum.com/topic/1609-alfred-is-searching-directories-i-dont-want/?p=18249&quot;&gt;http://www.alfredforum.com/topic/1609-alfred-is-searching-directories-i-dont-want/?p=18249&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;若真要排除某些文件夹的话，在 Alfredforum 找到个曲线救国的方法，你可以在以下路径&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;System Preferences –&amp;gt; Spotlight –&amp;gt; Privacy&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;添加排除的文件夹，然后在 Alfred 上输入&lt;code&gt;reload&lt;/code&gt;以刷新其应用缓存，不过这会同时影响到 Alfred 和 Spotlight，导致在 Alfred 和 Spotlight 上都搜索不到该目录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do you ever need to search for the contents of these Adobe folders? If you don’t, you can pop open Spotlight’s Privacy preferences and drag the folder there to exclude it from your Mac’s results.&lt;/p&gt;
&lt;p&gt;Once you’ve done this, type “reload” into Alfred to refresh his application cache, and you should no longer see the Adobe apps in your results :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vero&lt;/strong&gt; - Alfred’s Mum&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.alfredforum.com/topic/8697-how-to-filter-search-results/?p=43104&quot;&gt;http://www.alfredforum.com/topic/8697-how-to-filter-search-results/?p=43104&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Andrew&lt;/strong&gt; - Alfred’s Dad 在 2014 年也表态考虑到 Alfred 整体的用户体验暂无计划支持 “exclude（排除）” 功能，详情可以查看该 &lt;a href=&quot;http://www.alfredforum.com/topic/3346-exclude-folders-and-filetypes-both-globally-and-for-file-filters/?p=21737&quot;&gt;链接&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;类比&quot;&gt;&lt;a href=&quot;#类比&quot; class=&quot;headerlink&quot; title=&quot;类比&quot;&gt;&lt;/a&gt;类比&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;在指定的搜索范围内，搜索指定的文件格式，最后在指定应用打开&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;搜索指定的&lt;code&gt;.sketch&lt;/code&gt;文件，并通过 Sketch 打开&lt;/li&gt;
&lt;li&gt;搜索指定的文件夹，并在 Finder 中显示&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;下载链接&quot;&gt;&lt;a href=&quot;#下载链接&quot; class=&quot;headerlink&quot; title=&quot;下载链接&quot;&gt;&lt;/a&gt;下载链接&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yangcaimu/Alfred-Workflows&quot;&gt;Alfred-Workflows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.alfredforum.com/topic/464-open-xcode-projects/&quot;&gt;Open Xcode Projects - Share your Workflows - Alfred App Community Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alikaragoz/alfred-extensions&quot;&gt;GitHub - alikaragoz/alfred-extensions: Alfred 2 workflows and themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      制作「快速打开 Xcode 工程」的 Alfred workflow。
    
    </summary>
    
    
      <category term="Mac" scheme="http://yangcaimu.github.io/tags/Mac/"/>
    
      <category term="Alfred" scheme="http://yangcaimu.github.io/tags/Alfred/"/>
    
      <category term="Workflow" scheme="http://yangcaimu.github.io/tags/Workflow/"/>
    
      <category term="Xcode" scheme="http://yangcaimu.github.io/tags/Xcode/"/>
    
  </entry>
  
  <entry>
    <title>Windows 使用技巧</title>
    <link href="http://yangcaimu.github.io/2014/05/25/windowshiyongjiqiao/"/>
    <id>http://yangcaimu.github.io/2014/05/25/windowshiyongjiqiao/</id>
    <published>2014-05-25T15:07:16.000Z</published>
    <updated>2016-06-24T06:05:26.000Z</updated>
    
    <content type="html">&lt;p&gt;介于正式使用 RMBP，以后应该没多少机会使用 Windows，在此记录下之前使用 Window 的一些心得，还有纪念下陪伴我大学生活的 Acer 4752G 本本。&lt;/p&gt;
&lt;p&gt;记得在大一暑假的某一天，冥冥之中闲逛到 X-Force 的 &lt;a href=&quot;http://www.iplaysoft.com/&quot;&gt;异次元软件世界&lt;/a&gt;，在 “本年热门” Tag 看到一篇文章 &lt;a href=&quot;http://www.iplaysoft.com/build-effective-working-environment-1.html&quot;&gt;《让电脑更高效的魔法 - 浅谈高效率PC工作环境的简化、净化与建立方法 (上)》&lt;/a&gt;、&lt;a href=&quot;http://www.iplaysoft.com/build-effective-working-environment-2.html&quot;&gt;《让电脑更高效的魔法 – 浅谈高效率PC工作环境的简化、净化与建立方法 (下)》&lt;/a&gt;，于是乎无聊没事做，就去效仿了下。&lt;/p&gt;
&lt;p&gt;高效、Geek、神器、Auto Hot Key、Vim、Total Commander、Evernote，渐渐的开拓了我菜鸟的视野。PS：那时还不知道有 Mac 这个东东的存在&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主要原则：&lt;strong&gt;在更短时间里，完成你要做的事&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;开机启动（尽量少启动项）&quot;&gt;&lt;a href=&quot;#开机启动（尽量少启动项）&quot; class=&quot;headerlink&quot; title=&quot;开机启动（尽量少启动项）&quot;&gt;&lt;/a&gt;开机启动（尽量少启动项）&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;管理开机启动项可以用系统的&lt;code&gt;msconfig&lt;/code&gt;或者 360软件管理（介于 360安全卫士 只有这个功能有点用处，强大的网友专门提取了这个功能作为一个 .exe 文件）&lt;/li&gt;
&lt;li&gt;杀毒软件（Windows Security Essential 或者裸机）&lt;/li&gt;
&lt;li&gt;Auto Hot Key 的脚本&lt;/li&gt;
&lt;li&gt;一些小的辅助应用，不影响开机速度（eg: Flux）&lt;/li&gt;
&lt;li&gt;有些大的软件真的要开机启动的话，可以用 Auto Hot Key 编写延迟启动的脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Auto-Hot-Key-的使用（尽量用快捷键启动软件）&quot;&gt;&lt;a href=&quot;#Auto-Hot-Key-的使用（尽量用快捷键启动软件）&quot; class=&quot;headerlink&quot; title=&quot;Auto Hot Key 的使用（尽量用快捷键启动软件）&quot;&gt;&lt;/a&gt;Auto Hot Key 的使用（尽量用快捷键启动软件）&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;常用软件通过编写 Auto Hot Key 脚本可以快捷键启动&lt;/li&gt;
&lt;li&gt;其余的软件统一快捷方式放在同一个文件夹里，并编写脚本快捷键打开该文件夹&lt;/li&gt;
&lt;li&gt;编写一个全局开关，负责打开与关闭 Auto Hot Key 的热键设置（eg: &lt;code&gt;F10::suspend&lt;/code&gt;,通过 F10 作为开关）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;我自己的-Auto-Hot-Key-脚本&quot;&gt;&lt;a href=&quot;#我自己的-Auto-Hot-Key-脚本&quot; class=&quot;headerlink&quot; title=&quot;我自己的 Auto Hot Key 脚本&quot;&gt;&lt;/a&gt;我自己的 Auto Hot Key 脚本&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;!&lt;/code&gt; -&amp;gt; &lt;code&gt;Alt&lt;/code&gt;按键，&lt;code&gt;^&lt;/code&gt; -&amp;gt; &lt;code&gt;Ctrl&lt;/code&gt;按键&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!x&lt;/code&gt; -&amp;gt; &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;X&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script src=&quot;https://gist.github.com/yangcaimu/94378a8a00563caa5cbf77a13a89a6ed.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;软件&quot;&gt;&lt;a href=&quot;#软件&quot; class=&quot;headerlink&quot; title=&quot;软件&quot;&gt;&lt;/a&gt;软件&lt;/h2&gt;&lt;h3 id=&quot;搜索工具&quot;&gt;&lt;a href=&quot;#搜索工具&quot; class=&quot;headerlink&quot; title=&quot;搜索工具&quot;&gt;&lt;/a&gt;搜索工具&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Everything&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/qianlifeng/Wox&quot;&gt;Wox&lt;/a&gt;（类似 Mac 下 Alfred）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;文件管理器&quot;&gt;&lt;a href=&quot;#文件管理器&quot; class=&quot;headerlink&quot; title=&quot;文件管理器&quot;&gt;&lt;/a&gt;文件管理器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Total Commander&lt;/li&gt;
&lt;li&gt;Clover&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;垃圾清理&quot;&gt;&lt;a href=&quot;#垃圾清理&quot; class=&quot;headerlink&quot; title=&quot;垃圾清理&quot;&gt;&lt;/a&gt;垃圾清理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CCleaner&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;影音&quot;&gt;&lt;a href=&quot;#影音&quot; class=&quot;headerlink&quot; title=&quot;影音&quot;&gt;&lt;/a&gt;影音&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;射手播放器&lt;/li&gt;
&lt;li&gt;Kmplayer Plus&lt;/li&gt;
&lt;li&gt;网易云音乐&lt;/li&gt;
&lt;li&gt;DoubanFM&lt;/li&gt;
&lt;li&gt;Foobar&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;云存储&quot;&gt;&lt;a href=&quot;#云存储&quot; class=&quot;headerlink&quot; title=&quot;云存储&quot;&gt;&lt;/a&gt;云存储&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Dropbox&lt;/li&gt;
&lt;li&gt;百度云&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;知识储备&quot;&gt;&lt;a href=&quot;#知识储备&quot; class=&quot;headerlink&quot; title=&quot;知识储备&quot;&gt;&lt;/a&gt;知识储备&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Evernote&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;文库下载&quot;&gt;&lt;a href=&quot;#文库下载&quot; class=&quot;headerlink&quot; title=&quot;文库下载&quot;&gt;&lt;/a&gt;文库下载&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;DocDown&lt;/li&gt;
&lt;li&gt;iDocDown&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Connectify Hotspot（笔记本作为 WIFI 热点）&lt;/li&gt;
&lt;li&gt;DiskGenius（查看硬盘状态、格盘、硬盘启动项）&lt;/li&gt;
&lt;li&gt;EasyBCD（双系统要用到）&lt;/li&gt;
&lt;li&gt;Flux（色温屏保）&lt;/li&gt;
&lt;li&gt;office Tab center（让 Office 支持 Tag）&lt;/li&gt;
&lt;li&gt;P2P 终结者&lt;/li&gt;
&lt;li&gt;start unlocker（不会出 “现该文件正在使用，删不了”）&lt;/li&gt;
&lt;li&gt;teamViewer（远程协同）&lt;/li&gt;
&lt;li&gt;Ulead gif animator（Gif 制作工具）&lt;/li&gt;
&lt;li&gt;UltraISO（制作、读取 ISO 镜像）&lt;/li&gt;
&lt;li&gt;VMware Workstation（虚拟机）&lt;/li&gt;
&lt;li&gt;Windows hotkey explorer（查看当前系统热键）&lt;/li&gt;
&lt;li&gt;FSCapture（截图工具）&lt;/li&gt;
&lt;li&gt;TeraCopy（复制粘贴，可暂停，速度更快）&lt;/li&gt;
&lt;li&gt;ADsafe（广告拦截）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;小工具&quot;&gt;&lt;a href=&quot;#小工具&quot; class=&quot;headerlink&quot; title=&quot;小工具&quot;&gt;&lt;/a&gt;小工具&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Hide Taskbar（隐藏任务栏）&lt;/li&gt;
&lt;li&gt;HideDesktopIcons（隐藏桌面图标）&lt;/li&gt;
&lt;li&gt;offandlock（锁定电脑）&lt;/li&gt;
&lt;li&gt;turn off LCD（关闭屏幕）&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      Windows 使用原则以及应用介绍。
    
    </summary>
    
    
      <category term="Skills" scheme="http://yangcaimu.github.io/tags/Skills/"/>
    
      <category term="Windows" scheme="http://yangcaimu.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Mac 使用技巧</title>
    <link href="http://yangcaimu.github.io/2014/05/24/macshiyongjiqiao/"/>
    <id>http://yangcaimu.github.io/2014/05/24/macshiyongjiqiao/</id>
    <published>2014-05-24T06:44:51.000Z</published>
    <updated>2016-06-24T06:03:12.000Z</updated>
    
    <content type="html">&lt;p&gt;通过使用 Mac 提高生产效率，不止是在工作上，在日常生活上也有必要提高效率，本文先从快捷键、触摸板、工具、小技巧几点切入。&lt;/p&gt;
&lt;h2 id=&quot;Shortcuts&quot;&gt;&lt;a href=&quot;#Shortcuts&quot; class=&quot;headerlink&quot; title=&quot;Shortcuts&quot;&gt;&lt;/a&gt;Shortcuts&lt;/h2&gt;&lt;h3 id=&quot;官方手册&quot;&gt;&lt;a href=&quot;#官方手册&quot; class=&quot;headerlink&quot; title=&quot;官方手册&quot;&gt;&lt;/a&gt;官方手册&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://support.apple.com/kb/HT1343?viewlocale=zh_CN&quot;&gt;系统快捷键&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;常用的快捷键&quot;&gt;&lt;a href=&quot;#常用的快捷键&quot; class=&quot;headerlink&quot; title=&quot;常用的快捷键&quot;&gt;&lt;/a&gt;常用的快捷键&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;基本的都可以在 System Preferences - Keyboard - Shortcuts 里找到，或者在软件的 Preferences 里也可以找到&lt;/li&gt;
&lt;li&gt;一般的基础快捷键有：&lt;/li&gt;
&lt;li&gt;截图、复制与粘贴、窗口切换、打开与关闭应用程序、切换 Space、放大与缩小界面操作……（详细可参考官方文档）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;其他快捷键&quot;&gt;&lt;a href=&quot;#其他快捷键&quot; class=&quot;headerlink&quot; title=&quot;其他快捷键&quot;&gt;&lt;/a&gt;其他快捷键&lt;/h3&gt;&lt;p&gt;文本操作（强烈推荐使用，效率大大提升）&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;OS X 下所有输入区都支持 readline 的快捷键，熟悉后可以大大提升率&lt;/li&gt;
&lt;li&gt;Control + A -&amp;gt; 跳到行首&lt;/li&gt;
&lt;li&gt;Control + E -&amp;gt; 跳到行尾&lt;/li&gt;
&lt;li&gt;Option + Left / Right -&amp;gt; 左 / 右移动一个单词位&lt;/li&gt;
&lt;li&gt;Option + Delete -&amp;gt; 删除一个单词&lt;/li&gt;
&lt;li&gt;Command + Delete -&amp;gt; 删除到行首&lt;/li&gt;
&lt;li&gt;Control + K -&amp;gt; 删除到行尾&lt;/li&gt;
&lt;li&gt;Option大多与单词操作相关，Control 与段落相关&lt;/li&gt;
&lt;li&gt;Command + 鼠标 -&amp;gt; 选中不同位置的文本内容&lt;/li&gt;
&lt;li&gt;Option + 鼠标 -&amp;gt; 对文本进行块选&lt;/li&gt;
&lt;li&gt;Option + Shift + Command + V -&amp;gt; 无格式粘贴&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;杂&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Command + , -&amp;gt; 打开偏好设置&lt;/li&gt;
&lt;li&gt;Shift + Command + / -&amp;gt; 打开程序里的全局搜索菜单&lt;/li&gt;
&lt;li&gt;Shift + Command + Y -&amp;gt; 快速创建便笺&lt;/li&gt;
&lt;li&gt;Control + F2 -&amp;gt; 控制 menu bar&lt;/li&gt;
&lt;li&gt;Control + F3 -&amp;gt; 控制 Dock&lt;/li&gt;
&lt;li&gt;神奇的 Option 键 -&amp;gt; 没事就按按 Option 键&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;终端快捷键&quot;&gt;&lt;a href=&quot;#终端快捷键&quot; class=&quot;headerlink&quot; title=&quot;终端快捷键&quot;&gt;&lt;/a&gt;终端快捷键&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;清屏：Command + K&lt;/li&gt;
&lt;li&gt;向左 / 向右切换标签： Command + Shift + { 或 }&lt;/li&gt;
&lt;li&gt;Control + a / e    回到命令行头 / 尾&lt;/li&gt;
&lt;li&gt;Option + b / f     向前 / 后跳一个单词&lt;/li&gt;
&lt;li&gt;Control +u / k    删除光标前 / 后所有单词&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;iTerm2&quot;&gt;&lt;a href=&quot;#iTerm2&quot; class=&quot;headerlink&quot; title=&quot;iTerm2&quot;&gt;&lt;/a&gt;iTerm2&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;分窗口操作：Shift + Command+d（横向）Command + d（竖向）&lt;/li&gt;
&lt;li&gt;查找和粘贴：Command + f，呼出查找功能，tab 键选中找到的文本，Option + enter - 粘贴&lt;/li&gt;
&lt;li&gt;自动完成：Command + 根据上下文呼出自动完成窗口，上下键选择&lt;/li&gt;
&lt;li&gt;粘贴历史：Shift + Command + h&lt;/li&gt;
&lt;li&gt;回放功能：Option + Command + b&lt;/li&gt;
&lt;li&gt;全屏：Command + Enter&lt;/li&gt;
&lt;li&gt;光标去哪了？ Command + /&lt;/li&gt;
&lt;li&gt;Expose Tabs：Option + Command + e&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;更多快捷键&quot;&gt;&lt;a href=&quot;#更多快捷键&quot; class=&quot;headerlink&quot; title=&quot;更多快捷键&quot;&gt;&lt;/a&gt;更多快捷键&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;可在 System Preferences - Keyboard - Shortcuts 自定义&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Trackpad&quot;&gt;&lt;a href=&quot;#Trackpad&quot; class=&quot;headerlink&quot; title=&quot;Trackpad&quot;&gt;&lt;/a&gt;Trackpad&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://support.apple.com/kb/ht4721?viewlocale=zh_CN&quot;&gt;Mac 基础知识：Multi-Touch 手势&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Tools&quot;&gt;&lt;a href=&quot;#Tools&quot; class=&quot;headerlink&quot; title=&quot;Tools&quot;&gt;&lt;/a&gt;Tools&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;hzlzh 的 &lt;a href=&quot;https://github.com/hzlzh/Best-App&quot;&gt;Best-App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Alfred（神器）&lt;ul&gt;
&lt;li&gt;Workflows: workflows Searcher…&lt;/li&gt;
&lt;li&gt;自定义搜索规则&lt;/li&gt;
&lt;li&gt;Force Keyboard: US&lt;/li&gt;
&lt;li&gt;相关链接&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://alfredthe.me/&quot;&gt;Alfred Themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hzlzh/AlfredWorkflow.com&quot;&gt;Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hzlzh/AlfredWorkflow.com&quot;&gt;Workflow for github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zhihu.com/question/20656680&quot;&gt;借助 Alfred 2.0 的 Workflows 功能可以做哪些好玩的事情&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mou、LightPaper（Markdown编辑器）&lt;/li&gt;
&lt;li&gt;Homebrew（命令行安装软件，支持批量安装）&lt;/li&gt;
&lt;li&gt;百度输入法（安静模式）&lt;/li&gt;
&lt;li&gt;Bartender（菜单图标管理）&lt;/li&gt;
&lt;li&gt;oh-my-zsh + iTerm2（Shell、终端）&lt;/li&gt;
&lt;li&gt;F.lux（色温调节屏幕亮度）&lt;/li&gt;
&lt;li&gt;Keyboard Maestro（自动化流程的简化工具）&lt;/li&gt;
&lt;li&gt;jitouch（自定义触摸板手势）&lt;/li&gt;
&lt;li&gt;Go2Shell（目录 –&amp;gt; 终端）&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Command-Line-Interface&quot;&gt;&lt;a href=&quot;#Command-Line-Interface&quot; class=&quot;headerlink&quot; title=&quot;Command Line Interface&quot;&gt;&lt;/a&gt;Command Line Interface&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/applenews/devnews/2014/0519/8466.html&quot;&gt;每个Mac OS X 命令行用户应当知道的终端工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  ex:&lt;code&gt;open .&lt;/code&gt;（终端 –&amp;gt; 目录）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;lsof&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在倾倒废纸篓的时候，经常会提示该文件还在使用，不能删除，但是又不知道哪个程序在用，怎么办？Unix 下有一个命令叫做&lt;code&gt;lsof&lt;/code&gt;，名字是 list open files 的缩写，顾名思义，就是查看打开的文件，在终端里输入&lt;code&gt;lsof 文件名&lt;/code&gt;，就可以找到打开这个文件的程序。关掉程序，就可以正常删除文件了。当然&lt;code&gt;lsof&lt;/code&gt;还有很多丰富的指令，感兴趣的童靴自行 Google 吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Skills&quot;&gt;&lt;a href=&quot;#Skills&quot; class=&quot;headerlink&quot; title=&quot;Skills&quot;&gt;&lt;/a&gt;Skills&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;有很多是从 &lt;a href=&quot;http://item.jd.com/11398297.html&quot;&gt;《MacTalk·人生元编程》&lt;/a&gt; 里摘抄的，主要摘抄了些要记的，不懂的，或者经常要用到，归档在一起，方便以后查阅。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;去除右键菜单的重复项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;OS X 系统有个问题，某个程序反复安装后，选中某种类型的文件，点右键 - 打开方式，你会看到不少重复的选项，我们可以用以下命令去除重复项。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt; -domain system -domain user&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;旋转 Mac 的屏幕&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开系统选项设置，已经打开了的，退出重新打开。按住 option + command 键盘，点击显示器，在原来的亮度选项下方会出现一个旋转的选项，这时候你就可以旋转你的屏幕了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Mac 上看视频发热问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zythum.sinaapp.com/youkuhtml5playerbookmark/&quot;&gt;妈妈再也不用担心我的macbook发烫了计划2.0Beta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dock的文件夹&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;（开启隐藏的列表功能）Dock 文件夹有一个隐藏的列表功能，可以在命令行输入如下命令开启，另外，在列表和网格模式，还可以通过command + / - 来放大和缩小图标，&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;defaults write com.apple.dock use-new-list-stack -bool TRUE; killall Dock&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当我们打开 Dock 文件夹后，先打开某个文件所在文件夹时，按住 command，点击该文件，就会打开 Finder 文件夹，并选中你刚才点击的文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AirDrop 的有线传输&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Airdrop 默认只能通过 WIFI 来传文件，如果电脑已经连了网线，但是没开 WIFI 就不能用 AirDrop 了，有一个办法可以打开 AirDrop 通过有线传文件的特征。打开终端输入：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;defaults write com.apple.NetworkBrowser BrowseAllInterfaces 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后选中 Dock 栏的 Finder，按住 option 键右键点击 Finder 图标，点击底部菜单项 “重新开启”，Finder重启之后，即使你的电脑没开 WIFI，也可以用 AirDrop 给别人分享传文件了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;词典发音（Option + Esc 让 Mac 把你选中的单词读出来）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://myblogimage.qiniudn.com/illustration%5C%E8%8F%9C%E9%B8%9F%E7%BA%A7Mac%E9%85%8D%E7%BD%AE%5CScreen%20Shot%202014-02-26%20at%206.50.04%20PM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_59fb90df01019vod.html&quot;&gt;通过快捷键快速显示、隐藏文件方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在 OS X 上建立共享 Wifi 热点&lt;/li&gt;
&lt;li&gt;上 App Store 下软件切换 DNS（ &lt;a href=&quot;http://dns.v2ex.com/&quot;&gt;V2EX&lt;/a&gt;，搭配 Alfred 的 DNS 切换 workflows 更佳）&lt;/li&gt;
&lt;li&gt;&lt;p&gt;切换 Space&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ctrl + 数字切换到指定的 Space（在 System Preferences - Keyboard - Shortcuts - Mission Control 里设置）&lt;/li&gt;
&lt;li&gt;&lt;p&gt;四指双击在最近使用的两个 Space 间切换，在终端输入以下命令&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 功能开启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;defaults write com.apple.dock double-tap-jump-back -bool TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 重启 Dock&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;killall Dock;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;推荐书籍&quot;&gt;&lt;a href=&quot;#推荐书籍&quot; class=&quot;headerlink&quot; title=&quot;推荐书籍&quot;&gt;&lt;/a&gt;推荐书籍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://item.jd.com/11398297.html&quot;&gt;《MacTalk·人生元编程》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ibuick.com/products/OSX_masters_Mavericks/index.html&quot;&gt;《OS X 高手进阶 – Mavericks》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jianshu.io/p/cfc0d49f2e8f&quot;&gt;我用Mac的这一年 - SenVe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jianshu.io/p/3a66d02c461f&quot;&gt;菜鸟级 Mac 配置（一） - GeekPlux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jianshu.io/p/dee28486b465&quot;&gt;菜鸟级 Mac 配置（二） - GeekPlux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://miao.hu/2012/11/20/osx-shortcuts/&quot;&gt;OS X 下常用快捷键 - 紅一葉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://miao.hu/2012/02/26/osx-exp-share/&quot;&gt;Mac 软件和学习经验分享 - 紅一葉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wonderffee.github.io/blog/2013/10/07/some-macos-tips/&quot;&gt;一些MacOS技巧 - Wonderffee’s Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      从快捷键、触摸板、工具、小技巧几点切入，讲解 Mac 的使用技巧。
    
    </summary>
    
    
      <category term="Mac" scheme="http://yangcaimu.github.io/tags/Mac/"/>
    
      <category term="Skills" scheme="http://yangcaimu.github.io/tags/Skills/"/>
    
  </entry>
  
  <entry>
    <title>搭建 Blog 之旅</title>
    <link href="http://yangcaimu.github.io/2014/04/25/dajianblogzhilu/"/>
    <id>http://yangcaimu.github.io/2014/04/25/dajianblogzhilu/</id>
    <published>2014-04-25T05:38:00.000Z</published>
    <updated>2016-06-24T06:03:50.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;更新: 2016.05.14 - 博客已从 Octopress 迁移至 Hexo&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;终于在业余时间捣鼓好了博客，之前就一直有想搭博客，可是一直耽误了，这次采用 &lt;a href=&quot;https://github.com/imathis/octopress&quot;&gt;Octopress&lt;/a&gt; 博客引擎，主题用的是 &lt;a href=&quot;https://github.com/shashankmehta/greyshade&quot;&gt;Greyshade&lt;/a&gt;，当然还有其他主题，可以在 &lt;a href=&quot;https://github.com/imathis/octopress/wiki&quot;&gt;Octopress Wiki&lt;/a&gt; 查看。搭了博客才知道，Octopress 真的是给 “爱折腾的人” 玩的东西啊，在搭建的过程中不断的有新问题出现，要不断折腾才行 T_T，终于有了以下功能了，还有相关参考链接。&lt;/p&gt;
&lt;h2 id=&quot;发表并部署博文&quot;&gt;&lt;a href=&quot;#发表并部署博文&quot; class=&quot;headerlink&quot; title=&quot;发表并部署博文&quot;&gt;&lt;/a&gt;发表并部署博文&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;因为老是忘记，所以发在这方便查阅&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rake new_post[&lt;span class=&quot;string&quot;&gt;&quot;New Post&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rake generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -am &lt;span class=&quot;string&quot;&gt;&quot;Some comment here.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push origin &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rake deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;h3 id=&quot;已完成&quot;&gt;&lt;a href=&quot;#已完成&quot; class=&quot;headerlink&quot; title=&quot;已完成&quot;&gt;&lt;/a&gt;已完成&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;多说评论&lt;/li&gt;
&lt;li&gt;加网分享&lt;/li&gt;
&lt;li&gt;添加新浪微博支持&lt;/li&gt;
&lt;li&gt;添加 About 页面&lt;/li&gt;
&lt;li&gt;心愿墙&lt;/li&gt;
&lt;li&gt;添加公益 404&lt;/li&gt;
&lt;li&gt;为博文添加原文链接及声明&lt;/li&gt;
&lt;li&gt;添加 Instagram 支持&lt;/li&gt;
&lt;li&gt;添加 Tag 支持&lt;/li&gt;
&lt;li&gt;列表的排版&lt;/li&gt;
&lt;li&gt;添加 Flickr 图床&lt;/li&gt;
&lt;li&gt;About 页面&lt;/li&gt;
&lt;li&gt;添加 Google analytics 和百度统计&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;待测试&quot;&gt;&lt;a href=&quot;#待测试&quot; class=&quot;headerlink&quot; title=&quot;待测试&quot;&gt;&lt;/a&gt;待测试&lt;/h3&gt;&lt;h3 id=&quot;待做&quot;&gt;&lt;a href=&quot;#待做&quot; class=&quot;headerlink&quot; title=&quot;待做&quot;&gt;&lt;/a&gt;待做&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;图片 Fancybox 效果&lt;/li&gt;
&lt;li&gt;嵌入代码显示行数（这个搞了好久，不知道是 Markdown 渲染引擎还是哪里出问题）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;遇到的部分坑&quot;&gt;&lt;a href=&quot;#遇到的部分坑&quot; class=&quot;headerlink&quot; title=&quot;遇到的部分坑&quot;&gt;&lt;/a&gt;遇到的部分坑&lt;/h2&gt;&lt;h3 id=&quot;切换到-ZSH-后的配置&quot;&gt;&lt;a href=&quot;#切换到-ZSH-后的配置&quot; class=&quot;headerlink&quot; title=&quot;切换到 ZSH 后的配置&quot;&gt;&lt;/a&gt;切换到 ZSH 后的配置&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://agiledon.github.io/blog/2012/12/25/octopress-issues-solution-and-tips/&quot;&gt;Octopress博客问题解决方案与技巧 - 简单文本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/huang0925/p/3631916.html&quot;&gt;切换到ZSH以后遇到的坑 - 无敌北瓜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Octopress&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://812lcl.com/blog/2013/10/25/octopressbo-ke-da-jian-ji-mu-lu-jie-gou/&quot;&gt;Octopress博客搭建及目录结构 - 812lcl的博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;入门搭建&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://beyondvincent.com/2013/08/03/2013-08-03-108-creating-a-github-blog-using-octopress/&quot;&gt;利用Octopress搭建一个Github博客 - 破船之家&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/&quot;&gt;象写程序一样写博客：搭建基于github的博客 - 唐巧的技术博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;博客定制&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://812lcl.com/blog/2013/10/26/octopressce-bian-lan-ji-ping-lun-xi-tong-ding-zhi/&quot;&gt;Octopress侧边栏及评论系统定制 - 812lcl的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://biaobiaoqi.me/blog/2013/07/10/decorate-octopress/&quot;&gt;定制Octopress - Biaobiaoqi的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ginsmile.github.io/blog/2013/08/28/bo-ke-pei-zhi/#.U4RySZSSxN2&quot;&gt;Octopress博客配置 - John Xu’s Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://beyondvincent.com/2013/07/27/2013-07-27-107-hello-page-of-github/&quot;&gt;你好！github页面 - 破船之家&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;增加 Weibo、Instagram 支持&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qxxqxx.com/blog/greyshade-qiuyin/&quot;&gt;为Octopress的Greyshade主题增加新浪微博,Instagram和Dribbble - 我系蚯蚓啊’s Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://imallen.com/blog/2013/05/12/add-support-for-weibo-and-dribbble-to-greyshade.html&quot;&gt;为 Octopress 的 Greyshade 主题增加新浪微博和 Dribbble 的支持 - I’m Allen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用 Flickr 做图床&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://colors4.us/blog/2012/11/10/photostream-in-octopress/&quot;&gt;在octopress上引入相片流 - sourrabbit &amp;amp; linpx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://smarterhjw.com/blog/2013/10/21/integrate-octopress-with-flickr/&quot;&gt;在octopress中展示Flickr照片和相册 - Smarterhjw’s Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://xixitalk.github.io/blog/2013/06/19/Insert-a-Image-From-Flickr-in-Octopress/&quot;&gt;octopress里插入flickr的图片 - xixitalk’s snippet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      使用 Octopress 搭建 Blog。
    
    </summary>
    
    
      <category term="Blog" scheme="http://yangcaimu.github.io/tags/Blog/"/>
    
      <category term="Octopress" scheme="http://yangcaimu.github.io/tags/Octopress/"/>
    
  </entry>
  
</feed>
